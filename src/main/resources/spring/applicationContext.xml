<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<context:property-placeholder location="classpath:/META-INF/dbconfig.properties"/>
	<context:annotation-config/>

	<!--<bean id = "abean" class="com.web.spring.Abean" scope="singleton"/>-->
	<!--<import resource="applicationContext-db.xml"/>-->
	<!--<import resource="applicationContext-net.xml"/>-->
	<!--<import resource="applicationContext-bean.xml"/>-->
	<!--<import resource="applicationContext-mvc.xml"/>-->


	<bean id="targetClass" class="com.web.spring.aop.TargetClass"/>
	<bean id="myAdvice" class="com.web.spring.aop.MyBeforeAdvice"/>
	<bean id="myAfterAdvice" class="com.web.spring.aop.MyAfterAdvice"/>
	<bean id="myAspect" class="com.web.spring.aop.MyAspect"/>

	<bean id="targetClassProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="targetClass"/>
		<property name="proxyInterfaces" value="com.web.spring.aop.TargetClassInterFace"/>
		<property name="interceptorNames" value="myAdvice,myAfterAdvice"/>
	</bean>



	<!--拖过AOP配置完成对目标类产生代理-->
<!--	<aop:config>
		&lt;!&ndash;expression:表达式配置哪些类的那些方法需要进行增强  *:任意返回值 ..:任意参数 &ndash;&gt;
		<aop:pointcut id="pointcut1" expression="execution(*  com.web.spring.aop.TargetClass.test(..))"/>
		&lt;!&ndash;配置切面&ndash;&gt;
		<aop:aspect ref="myAspect">
			<aop:before method="myAspect" pointcut-ref="pointcut1"/>
			<aop:after method="myAspect" pointcut-ref="pointcut1"/>
		</aop:aspect>
	</aop:config>-->

</beans>
